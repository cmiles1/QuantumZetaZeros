from itertools import islice
import math


# Zeta.py
# Calculates Zeta function in terms of Eta(s), where Re(s) > 0, Re(s) != 1

def count(firstval=0, step=1):
    x = firstval
    while 1:
        yield x
        x += step

# Calculates Eta(s) of a complex/real positive number, s
def eta(s,t=100000):
    if s ==1:
        return float("inf")
    term = (((-1) **(n-1))/(n**s) for n in count(1))
    return sum(islice(term,t))

# Calculates Zeta(s) in terms of Eta(s)
def zeta(s,t=100000):
    return eta(s,t)/ (2**(1-s)-1)



"""
print(abs(zeta(.5+14.134725141734693790457251983562470270784257115699243175685567460149j)))
print(abs(zeta(.5+21.022039638771554992628479593896902777334340524902781754629520403587j)))
print(abs(zeta(.5+25.010857580145688763213790992562821818659549672557996672496542006745j)))
print(abs(zeta(.5+30.424876125859513210311897530584091320181560023715440180962146036993j)))
print(abs(zeta(.5+32.935061587739189690662368964074903488812715603517039009280003440784j))) 
print(abs(zeta(.5+37.586178158825671257217763480705332821405597350830793218333001113622j)))
print(abs(zeta(.5+40.918719012147495187398126914633254395726165962777279536161303667253j)))
print(abs(zeta(.5+43.327073280914999519496122165406805782645668371836871446878893685521j)))
print(abs(zeta(.5+48.005150881167159727942472749427516041686844001144425117775312519814j)))
print(abs(zeta(.5+49.773832477672302181916784678563724057723178299676662100781955750433j)))
"""
